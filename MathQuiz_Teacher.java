/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package mathquiz;
import java.io.BufferedWriter;
import java.util.List;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.SocketException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.LinkedList;
import javax.swing.JOptionPane;
import javax.swing.JTable;

import javax.swing.table.DefaultTableModel;

/**
 *
 * @author asami
 */
public class MathQuiz_Teacher extends javax.swing.JFrame {

    static ServerSocket serverSocket;
    static Socket socket;
    static DataInputStream dataInputStream;
    static DataOutputStream dataOutputStream;
    private DefaultTableModel mathquizTableModel;
    static private MathQues mathquestion;
    static private List <MathQues> mathquesList;
    static private LinkedList <MathQues> mathquesLinkedList;
    static private BinaryTree <MathQues> mathquesBinaryTree;
    
    
    /**
     * Creates new form MathQuiz_Teacher
     */
    public MathQuiz_Teacher() 
    {
        // cutomised colum names for MathQuiz jTable
        String[] columnNames_MathQuiz = new String[]{"LOp", "op", "ROp", "=", "Ans"};
        Object[] defaultMathQuiz = {"NA", "NA", "NA", "NA", "NA"};
        mathquizTableModel = new DefaultTableModel();
        mathquizTableModel.setColumnIdentifiers(columnNames_MathQuiz);
        mathquizTableModel.addRow(defaultMathQuiz);
        
        
        initComponents();
        mathquesList = new ArrayList<MathQues>();
        mathquesLinkedList = new LinkedList <MathQues>();
        mathquesBinaryTree = new BinaryTree <MathQues>();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        teacher_jLabel = new javax.swing.JLabel();
        Tmathquiz_jPanel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        FNumber_jTextField = new javax.swing.JTextField();
        SNumber_jTextField = new javax.swing.JTextField();
        Tanswer_jTextField = new javax.swing.JTextField();
        OP_jComboBox = new javax.swing.JComboBox<>();
        send_jButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        math_jTable = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        bubble_jButton = new javax.swing.JButton();
        selection_jButton = new javax.swing.JButton();
        insertion_jButton = new javax.swing.JButton();
        exit_jButton = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        DList_jButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        List_jTextArea = new javax.swing.JTextArea();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        binaryTree_jTextArea = new javax.swing.JTextArea();
        PreOrder__jLabel1 = new javax.swing.JLabel();
        PreOdisplay_jButton = new javax.swing.JButton();
        PreOSave_jButton = new javax.swing.JButton();
        InOrder__jLabel2 = new javax.swing.JLabel();
        InOdisplay_jButton1 = new javax.swing.JButton();
        InOSave_jButton1 = new javax.swing.JButton();
        PostOrder__jLabel3 = new javax.swing.JLabel();
        PostOdisplay_jButton = new javax.swing.JButton();
        PostOSave_jButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(253, 253, 213));

        teacher_jLabel.setBackground(new java.awt.Color(51, 51, 255));
        teacher_jLabel.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        teacher_jLabel.setForeground(new java.awt.Color(255, 255, 255));
        teacher_jLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        teacher_jLabel.setText("Teacher");
        teacher_jLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        teacher_jLabel.setOpaque(true);

        Tmathquiz_jPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel1.setText("Enter question, then click Send");

        jLabel2.setText("First Number:");

        jLabel3.setText("Operator:");

        jLabel4.setText("Second Number:");

        jLabel5.setText("Answer:");

        FNumber_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FNumber_jTextFieldActionPerformed(evt);
            }
        });

        SNumber_jTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SNumber_jTextFieldActionPerformed(evt);
            }
        });

        OP_jComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "+", "-", "*", "/" }));
        OP_jComboBox.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                OP_jComboBoxItemStateChanged(evt);
            }
        });
        OP_jComboBox.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                OP_jComboBoxMouseClicked(evt);
            }
        });
        OP_jComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                OP_jComboBoxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Tmathquiz_jPanelLayout = new javax.swing.GroupLayout(Tmathquiz_jPanel);
        Tmathquiz_jPanel.setLayout(Tmathquiz_jPanelLayout);
        Tmathquiz_jPanelLayout.setHorizontalGroup(
            Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tmathquiz_jPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(Tmathquiz_jPanelLayout.createSequentialGroup()
                        .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5))
                        .addGap(32, 32, 32)
                        .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(OP_jComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(FNumber_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(SNumber_jTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Tanswer_jTextField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)))))
        );
        Tmathquiz_jPanelLayout.setVerticalGroup(
            Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tmathquiz_jPanelLayout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(29, 29, 29)
                .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(FNumber_jTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 27, Short.MAX_VALUE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(OP_jComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SNumber_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Tmathquiz_jPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tanswer_jTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        send_jButton.setText("Send");
        send_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                send_jButtonActionPerformed(evt);
            }
        });

        math_jTable.setModel(mathquizTableModel);
        math_jTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                math_jTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(math_jTable);

        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel6.setText("Sort:");

        bubble_jButton.setText("1 - Bubble (asc)");
        bubble_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bubble_jButtonActionPerformed(evt);
            }
        });

        selection_jButton.setText("2 - Selection (desc) ");
        selection_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                selection_jButtonActionPerformed(evt);
            }
        });

        insertion_jButton.setText("3 - Insertion (asc) ");
        insertion_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertion_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addGap(18, 18, 18)
                .addComponent(bubble_jButton, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(selection_jButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(insertion_jButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(bubble_jButton)
                    .addComponent(selection_jButton)
                    .addComponent(insertion_jButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        exit_jButton.setText("Exit");
        exit_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exit_jButtonActionPerformed(evt);
            }
        });

        jLabel7.setText("  Linked List (of all incorrectly answered exercises):");
        jLabel7.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel7.setOpaque(true);

        DList_jButton.setText("Display List");
        DList_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DList_jButtonActionPerformed(evt);
            }
        });

        List_jTextArea.setColumns(20);
        List_jTextArea.setRows(5);
        jScrollPane2.setViewportView(List_jTextArea);

        jLabel8.setText("  Binary Tree (of all questions - added in the order that they were asked):");
        jLabel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jLabel8.setOpaque(true);

        binaryTree_jTextArea.setColumns(20);
        binaryTree_jTextArea.setRows(5);
        jScrollPane3.setViewportView(binaryTree_jTextArea);

        PreOrder__jLabel1.setBackground(new java.awt.Color(51, 51, 255));
        PreOrder__jLabel1.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PreOrder__jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        PreOrder__jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PreOrder__jLabel1.setText("Pre-Order");
        PreOrder__jLabel1.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PreOrder__jLabel1.setOpaque(true);

        PreOdisplay_jButton.setText("Display");
        PreOdisplay_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOdisplay_jButtonActionPerformed(evt);
            }
        });

        PreOSave_jButton.setText("Save");
        PreOSave_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PreOSave_jButtonActionPerformed(evt);
            }
        });

        InOrder__jLabel2.setBackground(new java.awt.Color(51, 51, 255));
        InOrder__jLabel2.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        InOrder__jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        InOrder__jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        InOrder__jLabel2.setText("In-Order");
        InOrder__jLabel2.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        InOrder__jLabel2.setOpaque(true);

        InOdisplay_jButton1.setText("Display");
        InOdisplay_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InOdisplay_jButton1ActionPerformed(evt);
            }
        });

        InOSave_jButton1.setText("Save");
        InOSave_jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InOSave_jButton1ActionPerformed(evt);
            }
        });

        PostOrder__jLabel3.setBackground(new java.awt.Color(51, 51, 255));
        PostOrder__jLabel3.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        PostOrder__jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        PostOrder__jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        PostOrder__jLabel3.setText("Post-Order");
        PostOrder__jLabel3.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        PostOrder__jLabel3.setOpaque(true);

        PostOdisplay_jButton.setText("Display");
        PostOdisplay_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostOdisplay_jButtonActionPerformed(evt);
            }
        });

        PostOSave_jButton.setText("Save");
        PostOSave_jButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PostOSave_jButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2)
                    .addComponent(teacher_jLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(send_jButton)
                            .addComponent(Tmathquiz_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jScrollPane1)
                                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addComponent(exit_jButton, javax.swing.GroupLayout.Alignment.TRAILING)))
                    .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 608, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(DList_jButton)
                        .addGap(0, 20, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PreOrder__jLabel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(PreOdisplay_jButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PreOSave_jButton)))
                        .addGap(155, 155, 155)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(InOrder__jLabel2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(InOdisplay_jButton1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(InOSave_jButton1)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(PostOrder__jLabel3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(PostOdisplay_jButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(PostOSave_jButton)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(teacher_jLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Tmathquiz_jPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(send_jButton)
                            .addComponent(exit_jButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(21, 21, 21)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DList_jButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(PreOrder__jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PreOdisplay_jButton)
                            .addComponent(PreOSave_jButton)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(InOrder__jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(InOdisplay_jButton1)
                            .addComponent(InOSave_jButton1)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(PostOrder__jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(PostOdisplay_jButton)
                            .addComponent(PostOSave_jButton))))
                .addContainerGap(28, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void send_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_send_jButtonActionPerformed
        // TODO add your handling code here:
        // get numbers from two text fields
        String firstNumberStr = FNumber_jTextField.getText();
        int firstNumber = 0;
        if (firstNumberStr.isEmpty())
        {
            //System.out.println("ERROR: first number is blank");
           javax.swing.JOptionPane.showMessageDialog(null, "ERROR: One or both numeric fields are empty or contain non-numeric values!", "SORRY - CHECK YOUR NUMBERS PLEASE!", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
        else
        {
            try
            {
                firstNumber = Integer.parseInt(firstNumberStr);
            }
            catch (NumberFormatException e)
            {
                //System.out.println("ERROR: first number is not a number");
                String exceptionStr = "Error:  First Number is not a NUMBER!";
                JOptionPane.showMessageDialog(null, exceptionStr, "SORRY - CHECK YOUR NUMBER PLEASE!", JOptionPane.ERROR_MESSAGE);
                return;
               
            }
            
        }
        
        String secondNumberStr = SNumber_jTextField.getText();
        int secondNumber = 0;
        if (secondNumberStr.isEmpty())
        {
            //System.out.println("ERROR: second number is blank");
      
        }
        else
        {
            try
            {
                secondNumber = Integer.parseInt(secondNumberStr);
            }
            catch (NumberFormatException e)
            {
                String exceptionStr = "Error: Second Number is not a NUMBER!";
                JOptionPane.showMessageDialog(null, exceptionStr, "SORRY - CHECK YOUR NUMBER PLEASE!", JOptionPane.ERROR_MESSAGE);
                return;
            }
        }
        
        // create mathques object
        String mathoperator = OP_jComboBox.getSelectedItem().toString();
        int ans = 0;
       
        switch(mathoperator)
        {
            case "+":
            ans = firstNumber + secondNumber;
            break;
            
            case "-":
            ans = firstNumber - secondNumber;
            break;
            
            case "*":
            ans = firstNumber * secondNumber;
            break;
            
            case "/":
            ans = firstNumber / secondNumber;
            break;
        
        }
        //System.out.println(ans);
        Tanswer_jTextField.setText(String.valueOf(ans));
        send_jButton.setEnabled(false);
        
        
        // Crerate MathQuestion
         mathquestion = new MathQues(firstNumber, mathoperator, secondNumber, ans);
         // add to Array List
         mathquesList.add(mathquestion);
         // add to BinaryTree
         mathquesBinaryTree.add(mathquestion);
         
        // adding mathquestion to new line
         String binaryTree_jTextAreastr = binaryTree_jTextArea.getText();
         String str = binaryTree_jTextArea.getText();
         String[] strs = str.split("\n");
        
        // add question to the table
         displayJTable();
        
        
        try
        {
          String messageOut = "";
          messageOut = mathquestion.toString();
          
          dataOutputStream.writeUTF(messageOut);
          // display answer from Student to Teacher on mathquizTable
          List_jTextArea.setText(messageOut);
                  
        }
        catch(Exception e)
        {
            String exceptionStr = "Server Send Error: " + e.getMessage();
            JOptionPane.showMessageDialog(null, exceptionStr, "SERVER SEND ERROR", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_send_jButtonActionPerformed

// add Math Question to JTable
    private void displayJTable()
    {
        
        if(mathquesList.size()> 0)
        {
            
            // check if any rows in the JTable
            if (mathquizTableModel.getRowCount() > 0)
            {
                for (int i = mathquizTableModel.getRowCount() - 1; i > -1; i--)
                {
                    mathquizTableModel.removeRow(i);
                }
            }
            // every row is a question ... set up the number of rows
            Object[][] mathques2DArray = new Object[mathquesList.size()][];
            // set up single 1D array --- e.g. 5 columns for 4 + 3 = 7
            Object [] mathques1DArray = new Object[5];
            // loop through each question in the List
            for (int i = 0; i < mathquesList.size(); i++)
            {
                mathques1DArray[0] = mathquesList.get(i).getFirstNumber();
                mathques1DArray[1] = mathquesList.get(i).getMathOperator();
                mathques1DArray[2] = mathquesList.get(i).getSecondNumber();
                mathques1DArray[3] = "=";
                mathques1DArray[4] = mathquesList.get(i).getAnswer();
                // assign 1D array (column of row data) into the 2D array
                mathques2DArray[i] = mathques1DArray;
                // add row to the JTable
                 mathquizTableModel.addRow(mathques2DArray[i]);
                
            }
            
            
        }
        else
        {
            System.out.println("No math questions ...");
        }
    
    
    }
    
    // VALIDATION
       public boolean validateData()
        {
          boolean status = false;
            if (FNumber_jTextField.getText().length() > 0)
            {
              if (SNumber_jTextField.getText().length() > 0) 
              {
                 if (Tanswer_jTextField.getText().length() > 0) 
                 {
                      status = true;
                 }
              }
            }
            return status;
        }
    
    private void SNumber_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SNumber_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SNumber_jTextFieldActionPerformed

    private void FNumber_jTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FNumber_jTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_FNumber_jTextFieldActionPerformed

    private void bubble_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bubble_jButtonActionPerformed
        // TODO add your handling code here:
        // check if mathquesList contains 
        if (mathquesList.size() == 0)
        {
            return;
        }
        // convert the mathList to a fixed array
        int [] intArray = new int[5];
        MathQues[] mathQues = mathquesList.toArray(new MathQues[mathquesList.size()]); 
        for (int i = 0; i < mathQues.length; i++)
        {
          for (int j = 0; j < mathQues.length - 1; j++)
          {
             
            
              if (mathQues[i].compareTo(mathQues[j]) < 0)0
0 0              {
                 // swap values
                  MathQues temp = mathQues[i];
                  mathQues[i] = mathQues[j];
                  mathQues[j] = temp;
                       
                }  
           
             
           } // end inner for loop
        } // end outer for loop
        
        // reassign mathquesList
        mathquesList = new ArrayList<MathQues>(Arrays.asList(mathQues));
        
        displayJTable();
      
        
    
       
       
    }//GEN-LAST:event_bubble_jButtonActionPerformed

    private void selection_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_selection_jButtonActionPerformed
        // TODO add your handling code here:
        if (mathquesList.size() == 0)
        {
            return;
        }
        // convert the mathList to a fixed array
        int [] intArray = new int[5];
        MathQues[] mathQues = mathquesList.toArray(new MathQues[mathquesList.size()]); 
        for (int i = 0; i < mathQues.length-1; i++)
        {
          for (int j = i+1 ; j < mathQues.length; j++)
          {
                         
              if (mathQues[i].compareTo(mathQues[j]) < 0)
               {
                 // swap values
                  MathQues temp = mathQues[i];
                  mathQues[i] = mathQues[j];
                  mathQues[j] = temp;
                       
                }  
           
             
           } // end inner for loop
        } // end outer for loop
        
        // reassign mathquesList
        mathquesList = new ArrayList<MathQues>(Arrays.asList(mathQues));
        
        displayJTable();
       
    }//GEN-LAST:event_selection_jButtonActionPerformed

    private void insertion_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertion_jButtonActionPerformed
        // TODO add your handling code here:
         if (mathquesList.size() == 0)
        {
            return;
        }
        // convert the mathList to a fixed array
        int [] intArray = new int[5];
        MathQues[] mathQues = mathquesList.toArray(new MathQues[mathquesList.size()]); 
        for (int i = 1; i < mathQues.length; i++)
        {
          for (int j = i; j > 0; j--)
          {
             
            
              if (mathQues[j].compareTo(mathQues[j - 1]) < 0)
               {
                 // swap values
                  MathQues temp = mathQues[j];
                  mathQues[j] = mathQues[j-1];
                  mathQues[j-1] = temp;
                       
                }  
           
           
             
           } // end inner for loop
        } // end outer for loop
        
        // reassign mathquesList
        mathquesList = new ArrayList<MathQues>(Arrays.asList(mathQues));
        
        displayJTable();
    }//GEN-LAST:event_insertion_jButtonActionPerformed

    private void PreOdisplay_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreOdisplay_jButtonActionPerformed
        // TODO add your handling code here:
        if (mathquesBinaryTree.size() > 0)
        {
            mathquesBinaryTree.resetTraversalString();
            mathquesBinaryTree.preOrder(mathquesBinaryTree.getRoot());
            String preOrderDisplayStr = mathquesBinaryTree.getTraversalString();
            binaryTree_jTextArea.setText("PRE-ORDER: " + preOrderDisplayStr);
            
        }
        else
        {
            binaryTree_jTextArea.setText("There are no math questions to display");
        }
        
    }//GEN-LAST:event_PreOdisplay_jButtonActionPerformed

    private void PreOSave_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PreOSave_jButtonActionPerformed
        // TODO add your handling code here:
         if (mathquesBinaryTree.size() > 0)
        {
            mathquesBinaryTree.resetTraversalString();
            mathquesBinaryTree.preOrder(mathquesBinaryTree.getRoot());
            String preOrderDisplayStr = mathquesBinaryTree.getTraversalString();
            String writeStr = "Pre-ORDER: " + preOrderDisplayStr;
            
        
            // prompt user to continue with the write
            int yes_or_no = javax.swing.JOptionPane.showConfirmDialog(null,
                            "You are about to write PRE-ORDER: " + writeStr + "to the external file: preorder.text \nDo you wish to continue?",
                                "Pre-Order file write", javax.swing.JOptionPane.YES_NO_OPTION);
            
            if (yes_or_no == JOptionPane.NO_OPTION)
            {
                return;
            }
            
            // write to external file
            FileWriter fr = null;
            BufferedWriter br = null;
            try
            {
                fr = new FileWriter(new File("preorder.txt"));
                br = new BufferedWriter(fr);
                br.write(writeStr);
            }
            catch (IOException e) 
            {
                System.out.println("WRITE ERROR: External file write raised an exception: " + e.getMessage());
            }
            finally
            {
                try 
                {
                    br.close();
                    fr.close();
                } 
                catch (IOException e) 
                {
                    System.out.println("WRITE ERROR: Closing of write objects raised an exception: " + e.getMessage());
                }
            }
        }
         else
        {
            binaryTree_jTextArea.setText("There are no math questions to save");
        }
        
    }//GEN-LAST:event_PreOSave_jButtonActionPerformed

    private void InOdisplay_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InOdisplay_jButton1ActionPerformed
        // TODO add your handling code here:
        if (mathquesBinaryTree.size() > 0)
        {
            mathquesBinaryTree.resetTraversalString();
            mathquesBinaryTree.inOrder(mathquesBinaryTree.getRoot());
            String inOrderDisplayStr = mathquesBinaryTree.getTraversalString();
            binaryTree_jTextArea.setText("IN-ORDER: " + inOrderDisplayStr);
            
        }
         else
        {
            binaryTree_jTextArea.setText("There are no math questions to display");
        }
    }//GEN-LAST:event_InOdisplay_jButton1ActionPerformed

    private void InOSave_jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InOSave_jButton1ActionPerformed
        // TODO add your handling code here:
        if (mathquesBinaryTree.size() > 0)
        {
            mathquesBinaryTree.resetTraversalString();
            mathquesBinaryTree.inOrder(mathquesBinaryTree.getRoot());
            String inOrderDisplayStr = mathquesBinaryTree.getTraversalString();
            String writeStr = "IN-ORDER: " + inOrderDisplayStr;
            
            // prompt user to continue with the write
            int yes_or_no = JOptionPane.showConfirmDialog(null, "Do you wish to record " + writeStr + " to the external file?", "IN-ORDER Write", JOptionPane.YES_NO_OPTION);
            
            if (yes_or_no == JOptionPane.NO_OPTION)
            {
                return;
            }
            // write to external file
            FileWriter fr = null;
            BufferedWriter br = null;
            try
            {
                fr = new FileWriter(new File("inorder.txt"));
                br = new BufferedWriter(fr);
                br.write(writeStr);
            }
            catch (IOException e) 
            {
                System.out.println("WRITE ERROR: External file write raised an exception: " + e.getMessage());
            }
            finally
            {
                try {
                    br.close();
                    fr.close();
                } catch (IOException e) 
                {
                    System.out.println("WRITE ERROR: Closing of write objects raised an exception: " + e.getMessage());
                }
            }
            
        }
        else
        {
            binaryTree_jTextArea.setText("There are no math questions to save");
        }
    }//GEN-LAST:event_InOSave_jButton1ActionPerformed

    private void PostOdisplay_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostOdisplay_jButtonActionPerformed
        // TODO add your handling code here:
          if (mathquesBinaryTree.size() > 0)
        {
            mathquesBinaryTree.resetTraversalString();
            mathquesBinaryTree.postOrder(mathquesBinaryTree.getRoot());
            String postOrderDisplayStr = mathquesBinaryTree.getTraversalString();
            binaryTree_jTextArea.setText("POST-ORDER:" + postOrderDisplayStr);
            
        }
         else
        {
            binaryTree_jTextArea.setText("There are no math questions to display");
        }
    }//GEN-LAST:event_PostOdisplay_jButtonActionPerformed

    private void PostOSave_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PostOSave_jButtonActionPerformed
        // TODO add your handling code here:
        if (mathquesBinaryTree.size() > 0)
        {
            mathquesBinaryTree.resetTraversalString();
            mathquesBinaryTree.postOrder(mathquesBinaryTree.getRoot());
            String postOrderDisplayStr = mathquesBinaryTree.getTraversalString();
            String writeStr = "POST-ORDER: " + postOrderDisplayStr;
            
        
            // prompt user to continue with the write
            int yes_or_no = javax.swing.JOptionPane.showConfirmDialog(null,
                            "You are about to write POST-ORDER: " + writeStr + "to the external file: preorder.text \nDo you wish to continue?",
                                "Post-Order file write", javax.swing.JOptionPane.YES_NO_OPTION);
            
            if (yes_or_no == JOptionPane.NO_OPTION)
            {
                return;
            }
            
            // write to external file
            FileWriter fr = null;
            BufferedWriter br = null;
            try
            {
                fr = new FileWriter(new File("postorder.txt"));
                br = new BufferedWriter(fr);
                br.write(writeStr);
            }
            catch (IOException e) 
            {
                System.out.println("WRITE ERROR: External file write raised an exception: " + e.getMessage());
            }
            finally
            {
                try 
                {
                    br.close();
                    fr.close();
                } 
                catch (IOException e) 
                {
                    System.out.println("WRITE ERROR: Closing of write objects raised an exception: " + e.getMessage());
                }
            }
        }
        else
        {
            binaryTree_jTextArea.setText("There are no math questions to save");
        }
    }//GEN-LAST:event_PostOSave_jButtonActionPerformed

    private void OP_jComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_OP_jComboBoxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_OP_jComboBoxActionPerformed

    private void math_jTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_math_jTableMouseClicked
        // TODO add your handling code here:
       
    }//GEN-LAST:event_math_jTableMouseClicked

    private void OP_jComboBoxMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_OP_jComboBoxMouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OP_jComboBoxMouseClicked

    private void OP_jComboBoxItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_OP_jComboBoxItemStateChanged
        // TODO add your handling code here:
        
    }//GEN-LAST:event_OP_jComboBoxItemStateChanged

    private void DList_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DList_jButtonActionPerformed
        // TODO add your handling code here:
        
         if (mathquesLinkedList.size() > 0)
        {
            String displayIncorrectQues = "HEAD <->";
            for (int i = 0; i < mathquesLinkedList.size(); i++)
            {
                displayIncorrectQues += mathquesLinkedList.get(i).formatQues() + " <-> ";
            }
            displayIncorrectQues += " TAIL";
            List_jTextArea.setText(displayIncorrectQues);
        }
        else
        {
            List_jTextArea.setText("There are no incorrectly answered questions");
        }
        
        
    }//GEN-LAST:event_DList_jButtonActionPerformed

    private void exit_jButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exit_jButtonActionPerformed
        // TODO add your handling code here:
        //exit_jButton Button = new exit_jButton ("Exit");
        System.exit(0);
    
        
    }//GEN-LAST:event_exit_jButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) 
    {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MathQuiz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MathQuiz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MathQuiz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MathQuiz_Teacher.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MathQuiz_Teacher().setVisible(true);
            }
        });
        
        try
        {
           
            serverSocket = new ServerSocket(1201);
            socket = serverSocket.accept();
            dataInputStream = new DataInputStream(socket.getInputStream());
            dataOutputStream = new DataOutputStream(socket.getOutputStream());
            String messageIn = "";
            while(! messageIn.equals("exit"))
            {
                messageIn = dataInputStream.readUTF();
                // clear the number in the answer field
                FNumber_jTextField.setText("");
                SNumber_jTextField.setText("");
                Tanswer_jTextField.setText("");
                send_jButton.setEnabled(true);
                
                
                if (messageIn.equals("y"))
                {
                    // student got the answer Right
                    List_jTextArea.setText("Student got the answer right");
                    
                    // put question in the Linked List
                    //mathquesLinkedList.add(mathquestion);
                }
                else
                {
                    // student got the answer Wrong
                    List_jTextArea.setText("Student got the answer wrong");
                    // put question in the linked list
                    mathquesLinkedList.add(mathquestion);
                    
                  
                }
                // display mathquiz from student
               // List_jTextArea.setText(List_jTextArea.getText()+ messageIn);
               //binaryTree_jTextArea.setText(String.valueOf(mathquesList));
            
            }
        }
         catch (SocketException se)
        {
            String exceptionStr = "Server Socket Error: " + se.getMessage();
            JOptionPane.showMessageDialog(null, exceptionStr, "SERVER ERROR", JOptionPane.ERROR_MESSAGE);
        }
        catch (Exception e)
        {
            String exceptionStr = "Server Error: " + e.getMessage();
            JOptionPane.showMessageDialog(null, exceptionStr, "SERVER ERROR", JOptionPane.ERROR_MESSAGE);
        }
        
        
    } // end of main()

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton DList_jButton;
    private static javax.swing.JTextField FNumber_jTextField;
    private javax.swing.JButton InOSave_jButton1;
    private javax.swing.JButton InOdisplay_jButton1;
    private javax.swing.JLabel InOrder__jLabel2;
    private static javax.swing.JTextArea List_jTextArea;
    private javax.swing.JComboBox<String> OP_jComboBox;
    private javax.swing.JButton PostOSave_jButton;
    private javax.swing.JButton PostOdisplay_jButton;
    private javax.swing.JLabel PostOrder__jLabel3;
    private javax.swing.JButton PreOSave_jButton;
    private javax.swing.JButton PreOdisplay_jButton;
    private javax.swing.JLabel PreOrder__jLabel1;
    private static javax.swing.JTextField SNumber_jTextField;
    private static javax.swing.JTextField Tanswer_jTextField;
    private javax.swing.JPanel Tmathquiz_jPanel;
    private static javax.swing.JTextArea binaryTree_jTextArea;
    private javax.swing.JButton bubble_jButton;
    private javax.swing.JButton exit_jButton;
    private javax.swing.JButton insertion_jButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable math_jTable;
    private javax.swing.JButton selection_jButton;
    private static javax.swing.JButton send_jButton;
    private javax.swing.JLabel teacher_jLabel;
    // End of variables declaration//GEN-END:variables
}
